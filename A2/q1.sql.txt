-- Distributions

SET SEARCH_PATH TO markus;
DROP TABLE IF EXISTS q1;

-- You must not change this table definition.
CREATE TABLE q1 (
	assignment_id integer,
	average_mark_percent real, 
	num_80_100 integer, 
	num_60_79 integer, 
	num_50_59 integer, 
	num_0_49 integer
);

-- You may find it convenient to do this for each of the views
-- that define your intermediate steps.  (But give them better names!)

DROP VIEW IF EXISTS all_assignment_group CASCADE;
DROP VIEW IF EXISTS total_possible_marks CASCADE;
DROP VIEW IF EXISTS total_mark_all_assignments CASCADE;
DROP VIEW IF EXISTS average CASCADE;
DROP VIEW IF EXISTS a80_100 CASCADE;
DROP VIEW IF EXISTS a60_79 CASCADE;
DROP VIEW IF EXISTS a50_59 CASCADE;
DROP VIEW IF EXISTS a0_49 CASCADE;


-- make a list for all assignments and groups
CREATE VIEW all_assignment_group AS
SELECT assignment_id, group_id
FROM Assignment natural left join AssignmentGroup;

-- total possible mark for each assignments
CREATE VIEW total_possible_marks AS
SELECT assignment_id, sum(weight * out_of) as total_possible_mark
FROM RubricItem
group by assignment_id;

-- total mark for each group including all assignments
CREATE VIEW total_mark_all_assignments AS
SELECT assignment_id, group_id, (mark / total_possible_mark) * 100 as mark_percent
FROM all_assignment_group natural left join total_possible_marks natural left join Result;

-- average mark for each assignments
CREATE VIEW average AS
SELECT assignment_id, avg(mark_percent) as average_mark_percent
FROM total_mark_all_assignments
group by assignment_id;

-- count 80_100 for each assignments
CREATE VIEW a80_100 AS
SELECT assignment_id, count(*) as num_80_100
FROM total_mark_all_assignments
WHERE mark_percent <= 100 and mark_percent >= 80
group by assignment_id;

-- count num_60_79 for each assignments
CREATE VIEW a60_79 AS
SELECT assignment_id, count(*) as num_60_79
FROM total_mark_all_assignments
WHERE mark_percent < 80 and mark_percent >= 60
group by assignment_id;

-- count 50_59 for each assignments
CREATE VIEW a50_59 AS
SELECT assignment_id, count(*) as num_50_59
FROM total_mark_all_assignments
WHERE mark_percent < 60 and mark_percent >= 50
group by assignment_id;

-- count 0_49 for each assignments
CREATE VIEW a0_49 AS
SELECT assignment_id, count(*) as num_0_49
FROM total_mark_all_assignments
WHERE mark_percent < 50 and mark_percent >= 0
group by assignment_id;


-- Final answer.
INSERT INTO q1 
	-- put a final query here so that its results will go into the table.
(SELECT *
FROM average natural full join a80_100 natural full join a60_79 natural full join a50_59 natural full join a0_49);